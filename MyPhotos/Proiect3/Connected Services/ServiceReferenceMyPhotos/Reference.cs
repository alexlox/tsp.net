//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReferenceMyPhotos
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Media", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos", IsReference=true)]
    public partial class Media : object
    {
        
        private string AbsPathField;
        
        private ServiceReferenceMyPhotos.CharValue CharValueField;
        
        private System.Collections.Generic.List<ServiceReferenceMyPhotos.Characteristic> CharacteristicsField;
        
        private System.DateTime CreatedAtField;
        
        private string DeletedField;
        
        private int IdField;
        
        private string TypeField;
        
        private System.DateTime UpdatedAtField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AbsPath
        {
            get
            {
                return this.AbsPathField;
            }
            set
            {
                this.AbsPathField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMyPhotos.CharValue CharValue
        {
            get
            {
                return this.CharValueField;
            }
            set
            {
                this.CharValueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMyPhotos.Characteristic> Characteristics
        {
            get
            {
                return this.CharacteristicsField;
            }
            set
            {
                this.CharacteristicsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedAt
        {
            get
            {
                return this.CreatedAtField;
            }
            set
            {
                this.CreatedAtField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Deleted
        {
            get
            {
                return this.DeletedField;
            }
            set
            {
                this.DeletedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdatedAt
        {
            get
            {
                return this.UpdatedAtField;
            }
            set
            {
                this.UpdatedAtField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CharValue", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos", IsReference=true)]
    public partial class CharValue : object
    {
        
        private ServiceReferenceMyPhotos.Characteristic CharacteristicField;
        
        private int CharacteristicIdField;
        
        private int IdField;
        
        private ServiceReferenceMyPhotos.Media MediaField;
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMyPhotos.Characteristic Characteristic
        {
            get
            {
                return this.CharacteristicField;
            }
            set
            {
                this.CharacteristicField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CharacteristicId
        {
            get
            {
                return this.CharacteristicIdField;
            }
            set
            {
                this.CharacteristicIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMyPhotos.Media Media
        {
            get
            {
                return this.MediaField;
            }
            set
            {
                this.MediaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Characteristic", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos", IsReference=true)]
    public partial class Characteristic : object
    {
        
        private System.Collections.Generic.List<ServiceReferenceMyPhotos.CharValue> CharValuesField;
        
        private int IdField;
        
        private System.Collections.Generic.List<ServiceReferenceMyPhotos.Media> MediaField;
        
        private string NameField;
        
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMyPhotos.CharValue> CharValues
        {
            get
            {
                return this.CharValuesField;
            }
            set
            {
                this.CharValuesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMyPhotos.Media> Media
        {
            get
            {
                return this.MediaField;
            }
            set
            {
                this.MediaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Filter", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos")]
    public partial class Filter : object
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Image", Namespace="http://schemas.datacontract.org/2004/07/System.Drawing")]
    public partial class Image : object
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyPhotosAPI.Property", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos")]
    public partial struct MyPhotosAPIProperty
    {
        
        private string NameField;
        
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceMyPhotos.IMyPhotos")]
    public interface IMyPhotos
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedia/GetMedia", ReplyAction="http://tempuri.org/IMedia/GetMediaResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Media>> GetMediaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedia/GetPhotoVideoIds", ReplyAction="http://tempuri.org/IMedia/GetPhotoVideoIdsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<int>> GetPhotoVideoIdsAsync(System.Collections.Generic.List<ServiceReferenceMyPhotos.Filter> filters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedia/GetPhotoVideoImage", ReplyAction="http://tempuri.org/IMedia/GetPhotoVideoImageResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Image> GetPhotoVideoImageAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedia/DeletePhotoVideo", ReplyAction="http://tempuri.org/IMedia/DeletePhotoVideoResponse")]
        System.Threading.Tasks.Task<bool> DeletePhotoVideoAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedia/AddPhotoVideo", ReplyAction="http://tempuri.org/IMedia/AddPhotoVideoResponse")]
        System.Threading.Tasks.Task<bool> AddPhotoVideoAsync(string path, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedia/Export", ReplyAction="http://tempuri.org/IMedia/ExportResponse")]
        System.Threading.Tasks.Task<bool> ExportAsync(System.Collections.Generic.List<int> ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedia/SendEmail", ReplyAction="http://tempuri.org/IMedia/SendEmailResponse")]
        System.Threading.Tasks.Task<bool> SendEmailAsync(System.Collections.Generic.List<int> ids, string toAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedia/PrintImage", ReplyAction="http://tempuri.org/IMedia/PrintImageResponse")]
        System.Threading.Tasks.Task<bool> PrintImageAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedia/GetAllProperties", ReplyAction="http://tempuri.org/IMedia/GetAllPropertiesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.MyPhotosAPIProperty>> GetAllPropertiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICharacteristic/AddProperty", ReplyAction="http://tempuri.org/ICharacteristic/AddPropertyResponse")]
        System.Threading.Tasks.Task<bool> AddPropertyAsync(string propertyName, string propertyType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICharacteristic/ModifyProperty", ReplyAction="http://tempuri.org/ICharacteristic/ModifyPropertyResponse")]
        System.Threading.Tasks.Task<bool> ModifyPropertyAsync(int mediaId, string propertyName, string propertyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICharacteristic/DeleteProperty", ReplyAction="http://tempuri.org/ICharacteristic/DeletePropertyResponse")]
        System.Threading.Tasks.Task<bool> DeletePropertyAsync(string propertyName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IMyPhotosChannel : ServiceReferenceMyPhotos.IMyPhotos, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class MyPhotosClient : System.ServiceModel.ClientBase<ServiceReferenceMyPhotos.IMyPhotos>, ServiceReferenceMyPhotos.IMyPhotos
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MyPhotosClient() : 
                base(MyPhotosClient.GetDefaultBinding(), MyPhotosClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IMyPhotos.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MyPhotosClient(EndpointConfiguration endpointConfiguration) : 
                base(MyPhotosClient.GetBindingForEndpoint(endpointConfiguration), MyPhotosClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MyPhotosClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MyPhotosClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MyPhotosClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MyPhotosClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MyPhotosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Media>> GetMediaAsync()
        {
            return base.Channel.GetMediaAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<int>> GetPhotoVideoIdsAsync(System.Collections.Generic.List<ServiceReferenceMyPhotos.Filter> filters)
        {
            return base.Channel.GetPhotoVideoIdsAsync(filters);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Image> GetPhotoVideoImageAsync(int id)
        {
            return base.Channel.GetPhotoVideoImageAsync(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePhotoVideoAsync(int id)
        {
            return base.Channel.DeletePhotoVideoAsync(id);
        }
        
        public System.Threading.Tasks.Task<bool> AddPhotoVideoAsync(string path, string type)
        {
            return base.Channel.AddPhotoVideoAsync(path, type);
        }
        
        public System.Threading.Tasks.Task<bool> ExportAsync(System.Collections.Generic.List<int> ids)
        {
            return base.Channel.ExportAsync(ids);
        }
        
        public System.Threading.Tasks.Task<bool> SendEmailAsync(System.Collections.Generic.List<int> ids, string toAddress)
        {
            return base.Channel.SendEmailAsync(ids, toAddress);
        }
        
        public System.Threading.Tasks.Task<bool> PrintImageAsync(int id)
        {
            return base.Channel.PrintImageAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.MyPhotosAPIProperty>> GetAllPropertiesAsync()
        {
            return base.Channel.GetAllPropertiesAsync();
        }
        
        public System.Threading.Tasks.Task<bool> AddPropertyAsync(string propertyName, string propertyType)
        {
            return base.Channel.AddPropertyAsync(propertyName, propertyType);
        }
        
        public System.Threading.Tasks.Task<bool> ModifyPropertyAsync(int mediaId, string propertyName, string propertyValue)
        {
            return base.Channel.ModifyPropertyAsync(mediaId, propertyName, propertyValue);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePropertyAsync(string propertyName)
        {
            return base.Channel.DeletePropertyAsync(propertyName);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMyPhotos))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMyPhotos))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8000/PC");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return MyPhotosClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IMyPhotos);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return MyPhotosClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IMyPhotos);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IMyPhotos,
        }
    }
}
